---
alwaysApply: true
description: HTFlow JavaScript Essentials - Ultra-minimal JavaScript rules for Webflow compatibility
---

# HTFlow JavaScript Essentials

## üö® CRITICAL - NEVER IGNORE üö®

### ABSOLUTE PROHIBITIONS

‚ùå **NEVER use class selectors** (.class-name) in JavaScript
‚ùå **NEVER use ID selectors** (#id-name) in JavaScript
‚ùå **NEVER use getElementById/getElementsByClassName** methods
‚ùå **NEVER use 'var'** - use 'const' or 'let' only
‚ùå **NEVER use function declarations** - use arrow functions only
‚ùå **NEVER use getElementsByTagName** - use data-ht attributes

### MANDATORY REQUIREMENTS

‚úÖ **ALWAYS use data-ht-\* attributes** for DOM selection
‚úÖ **ALWAYS use [data-ht-*] selectors** in querySelector
‚úÖ **ALWAYS use const/let** instead of var
‚úÖ **ALWAYS use arrow functions** instead of function declarations
‚úÖ **ALWAYS use modern ES6+** JavaScript features

## Core Rules

```javascript
// ‚úÖ Good: data-ht attribute selection
document.querySelectorAll("[data-ht-button]").forEach((button) => {
  button.addEventListener("click", handleClick);
});

// ‚ùå FORBIDDEN: Class-based selection
document.querySelectorAll(".button").forEach((button) => {
  button.addEventListener("click", handleClick);
});
```

```javascript
// ‚úÖ Good: Modern JavaScript
const handleClick = (event) => {
  const target = event.target;
  const data = target.dataset.htData;
};

// ‚ùå FORBIDDEN: Old syntax
function handleClick(event) {
  var target = event.target;
  var data = target.getAttribute("data-ht-data");
}
```

## Rules

- Use data-ht-\* attributes for ALL DOM selection
- Use arrow functions only (no function declarations)
- Use const/let only (no var)
- Use ES6+ features only
- Use JavaScript for hover animations (not CSS)
- Use requestAnimationFrame for animations

---

_HTFlow CLI - Ultra-minimal JavaScript rules._
